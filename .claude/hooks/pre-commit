#!/bin/sh
# Agent Guardrails Pre-Commit Hook
# Ensures agent accountability and code quality

echo "🔒 Running Agent Guardrails Pre-Commit Checks..."

# Function to run command and capture result
run_check() {
    local name="$1"
    local command="$2"
    local critical="$3"
    
    echo "🔍 $name..."
    if eval "$command"; then
        echo "✅ $name passed"
        return 0
    else
        echo "❌ $name failed"
        if [ "$critical" = "true" ]; then
            echo "🚫 Critical check failed - commit blocked"
            exit 1
        fi
        return 1
    fi
}

# Critical checks (block commit if failed)
run_check "TypeScript Compilation" "npm run type-check" true
run_check "ESLint Validation" "npm run lint" true

# Agent verification checks (non-blocking but logged)
CURRENT_SESSION=$(date +%s)-$(openssl rand -hex 3)

# Create file system snapshot for agent tracking
if [ -f ".claude/guardrails/file-state-monitor.js" ]; then
    echo "📸 Creating pre-commit file snapshot..."
    node .claude/guardrails/file-state-monitor.js snapshot "pre-commit-$CURRENT_SESSION" > /dev/null 2>&1
fi

# Check for recent agent activity
if [ -f ".claude/guardrails/execution-tracker.js" ]; then
    echo "🔍 Checking recent agent activity..."
    RECENT_REPORTS=$(node .claude/guardrails/execution-tracker.js report 2>/dev/null | jq length 2>/dev/null || echo "0")
    if [ "$RECENT_REPORTS" -gt 0 ]; then
        echo "📊 Found $RECENT_REPORTS recent agent sessions"
        
        # Run quick verification on recent sessions
        if [ -f ".claude/guardrails/verify-agent.js" ]; then
            echo "🔍 Running quick agent verification..."
            node .claude/guardrails/verify-agent.js quick 3 > /dev/null 2>&1
        fi
    fi
fi

# Update reliability metrics
if [ -f ".claude/guardrails/reliability-metrics.js" ]; then
    echo "📈 Updating reliability trends..."
    node .claude/guardrails/reliability-metrics.js trends > /dev/null 2>&1
fi

echo "✅ Agent Guardrails pre-commit checks completed"
echo "🚀 Proceeding with commit..."
{
  "description": "Agent Context Review Hook System - Ensures every agent starts with complete context awareness and contributes to collective knowledge",
  "version": "2.0.0",
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Task*",
        "description": "Pre-task context workflow for all agent tasks",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üîç AGENT CONTEXT REVIEW INITIATED - Loading complete project context...'"
          },
          {
            "type": "command",
            "command": "echo 'üìö Phase 1: Reading Core Documentation...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí CLAUDE.md: Development guidelines and agent team structure'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí ProjectContextEngineering.md: Technical architecture and specifications'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí ProjectTasks.md: Implementation roadmap and agent assignments'"
          },
          {
            "type": "command",
            "command": "echo 'üß† Phase 2: Checking Memory System...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Current Architecture: NEON PostgreSQL + Vercel + Direct APIs'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Stack: Next.js 15, React 19, TypeScript, Anthropic Claude, ElevenLabs'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Migration: Completed Cloudflare ‚Üí Vercel/Neon transition'"
          },
          {
            "type": "command",
            "command": "echo 'üìñ Phase 3: Context7 Library Integration...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Checking for latest library documentation if task involves external deps'"
          },
          {
            "type": "command",
            "command": "echo 'üîó Phase 4: Context Synthesis Complete'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Agent now has full project context and architecture awareness'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Ready to proceed with enterprise-grade development standards'"
          },
          {
            "type": "command",
            "command": "echo '‚úÖ CONTEXT REVIEW COMPLETE - Proceeding with task execution...'"
          }
        ]
      },
      {
        "matcher": "*neon-database-architect*",
        "description": "Neon Database Architect specific context loading",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üóÑÔ∏è NEON DATABASE ARCHITECT - Loading database-specific context...'"
          },
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/agents/neon-db-context.sh"
          }
        ]
      },
      {
        "matcher": "*vercel-deployment-specialist*",
        "description": "Vercel Deployment Specialist specific context loading",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üöÄ VERCEL DEPLOYMENT SPECIALIST - Loading deployment configurations...'"
          },
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/agents/vercel-deploy-context.sh"
          }
        ]
      },
      {
        "matcher": "*security-auditor-expert*",
        "description": "Security Auditor Expert specific context loading",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üîê SECURITY AUDITOR EXPERT - Loading security patterns and history...'"
          },
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/agents/security-audit-context.sh"
          }
        ]
      },
      {
        "matcher": "*api-integration-specialist*",
        "description": "API Integration Specialist specific context loading",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üîå API INTEGRATION SPECIALIST - Loading API documentation and patterns...'"
          },
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/agents/api-integration-context.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Task*",
        "description": "Post-task knowledge update workflow for preserving learnings",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üíæ KNOWLEDGE UPDATE INITIATED - Preserving task learnings...'"
          },
          {
            "type": "command",
            "command": "echo 'üß† Phase 1: Memory System Updates...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Recording new architecture patterns and solutions'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Updating entity relationships for NEON + Vercel stack'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Preserving successful integration patterns'"
          },
          {
            "type": "command",
            "command": "echo 'üìã Phase 2: Documentation Review...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Checking if core docs need updates based on new learnings'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Flagging any architecture changes for documentation'"
          },
          {
            "type": "command",
            "command": "echo 'üèÜ Phase 3: Pattern Recognition...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Recording successful code patterns and best practices'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Updating agent collaboration workflows'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Preserving solution approaches for future reference'"
          },
          {
            "type": "command",
            "command": "echo '‚úÖ KNOWLEDGE UPDATE COMPLETE - Learnings preserved for team'"
          }
        ]
      },
      {
        "matcher": "*project-docs-curator*",
        "description": "Project Docs Curator auto-update documentation with comprehensive context",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üìù PROJECT DOCS CURATOR - Initiating intelligent documentation update...'"
          },
          {
            "type": "command",
            "command": "echo '   ‚Üí Phase 1: Gathering comprehensive context (git, memory, Context7)'"
          },
          {
            "type": "command",
            "command": "echo '   ‚Üí Phase 2: Analyzing documentation gaps and priorities'"
          },
          {
            "type": "command",
            "command": "echo '   ‚Üí Phase 3: Generating intelligent update recommendations'"
          },
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/agents/docs-curator-update.sh"
          }
        ]
      },
      {
        "matcher": "*security-auditor-expert*",
        "description": "Security Auditor generate security reports",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üîê SECURITY AUDITOR - Generating security audit report...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Documenting security findings and recommendations'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Updating security checklist and compliance status'"
          }
        ]
      },
      {
        "matcher": "*neon-database-architect*",
        "description": "Neon Database Architect update optimization patterns",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üóÑÔ∏è NEON DATABASE ARCHITECT - Updating database optimization patterns...'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Recording query performance improvements'"
          },
          {
            "type": "command",
            "command": "echo '  ‚Üí Documenting connection pooling best practices'"
          }
        ]
      },
      {
        "matcher": "*performance-optimizer*",
        "description": "Performance Optimizer save metrics",
        "hooks": [
          {
            "type": "command",
            "command": "echo '‚ö° PERFORMANCE OPTIMIZER - Saving performance metrics...'"
          },
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/agents/performance-metrics.sh"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": "*",
        "description": "Context awareness reminder for all user interactions",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üéØ CONTEXT REMINDER: Current stack is NEON + Vercel + Direct APIs (no Cloudflare/MCP)'"
          }
        ]
      }
    ],
    "Validation": [
      {
        "matcher": "*vercel-deployment-specialist*",
        "description": "Vercel deployment health check",
        "hooks": [
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/validation/vercel-health-check.sh"
          }
        ]
      },
      {
        "matcher": "*neon-database-architect*",
        "description": "Neon database connection validation",
        "hooks": [
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/validation/neon-db-validate.sh"
          }
        ]
      },
      {
        "matcher": "*security-auditor-expert*",
        "description": "Security vulnerability scan",
        "hooks": [
          {
            "type": "command",
            "command": "/Users/tmk/Documents/prophet-growth-analysis/.claude/scripts/validation/security-scan.sh"
          }
        ]
      }
    ]
  },
  "settings": {
    "timeout": 5000,
    "continueOnError": true,
    "logLevel": "info"
  },
  "metadata": {
    "created": "2025-02-02",
    "updated": "2025-02-02",
    "version": "2.0.0",
    "purpose": "Enhanced agent-specific context awareness and knowledge preservation system",
    "team": {
      "core": [
        "Fullstack Architect Agent: Architecture decisions and complex development",
        "MCP Tools Specialist Agent: API integration patterns and schema design"
      ],
      "specialized": [
        "Neon Database Architect: Database optimization and schema management",
        "Vercel Deployment Specialist: Deployment configurations and monitoring",
        "Security Auditor Expert: Security patterns and vulnerability assessment",
        "API Integration Specialist: API documentation and integration patterns",
        "Project Docs Curator: Documentation automation and updates",
        "Performance Optimizer: Performance metrics and optimization"
      ]
    },
    "architecture": {
      "current": "Next.js 15 + Vercel + Neon PostgreSQL + Direct API integrations",
      "migration": "Completed transition from Cloudflare Agents/MCP to simplified stack",
      "apis": ["Anthropic Claude", "ElevenLabs Voice", "Prophet Forecasting"]
    }
  }
}
